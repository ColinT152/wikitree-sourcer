
//Defining utility functions and Setting up Data Layer 

/**************** Utility Functions Begin ***************/
function an_getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1);
        if (c.indexOf(name) === 0) return c.substring(name.length, c.length);
    }
    return "";
}

function an_getParam(name) {
    url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}

function urldecode(str) {
    return decodeURIComponent((str + '').replace(/\+/g, '%20'));
}

function dateFormat(d) {
    var yyyy = d.getFullYear().toString();
    var mm = (d.getMonth() + 1).toString();
    var dd = d.getDate().toString();
    var hh = d.getHours().toString();
    var mn = d.getMinutes().toString();
    if (mm < 10) { mm = "0" + mm; }
    if (dd < 10) { dd = "0" + dd; }
    if (hh < 10) { hh = "0" + hh; }
    if (mn < 10) { mn = "0" + mn; }
    return yyyy + mm + dd + hh + mn;
}

function arraysEqual(_arr1, _arr2) {

    if (!Array.isArray(_arr1) || ! Array.isArray(_arr2) || _arr1.length !== _arr2.length)
      return false;

    var arr1 = _arr1.concat().sort();
    var arr2 = _arr2.concat().sort();

    for (var i = 0; i < arr1.length; i++) {

        if (arr1[i] !== arr2[i])
            return false;

    }

    return true;

}

function setPageVal (l){
    digitalData["page_name"] = utag_data.page_name;
    var pNameVal = digitalData["page_name"]?digitalData["page_name"].split(" : ") : "";
    var dPath = window.location.pathname == "/" ? null : window.location.pathname.split("/"); 
    var dParts = window.document.location.hostname.split('.');
    var dBase = digitalData['domain'].indexOf('ancestry') == -1 ? dParts[1] : 'ancestry';
    var sDomain = dParts[0] !== "www" ? true : false;
    var dExt = dParts.length > 3 ? dParts[3] : dParts[2];
    var dGeo = dExt === 'com' ? 'us' : dExt;
    var pNameArray = [];

    if (l){

        if (pNameVal.length > 0){
            if (pNameVal.length >= l){
                for (var i = 0; i < l; i++){
                    pNameArray.push(pNameVal[i]);        
                }
            } else if (pNameVal.length < l){
                for (var i = 0; i < pNameVal.length; i++){
                    pNameArray.push(pNameVal[i]);        
                }
            }
            return pNameArray.join(" : ");
        } else {
            return;
        }
    } else {
        pNameVal ? pNameVal : null;
        if (pNameVal === null && digitalData){
            pNameVal = digitalData.page_name ? utag_data.page_name.split(" : ") : "";
            if (pNameVal.length > 0){
                let pNameArray = [];
                for (var i = 0; i < pNameVal.length; i++){
                    pNameArray.push(pNameVal[i]);        
                }
            }
                return pNameArray.join(" : ");
        } else {
            pNameArray.push(dBase +' '+ dGeo);
            if (sDomain){
                pNameArray.push(dParts[0]);
            }
            if (dPath !== null){
                for (var i = 0; i < dPath.length; i++) {
                    pNameArray.push(dPath[i]);
                }
            } else {
                pNameArray.push("home");
            }
        }
        return pNameArray.join(" : ");
    }
}

/**************** Utility Functions End ****************/


/******************Setting up Data Layer****************/
var digitalData ={};
var loc = window.location.href.split("?")[0];
var locS = window.location.pathname.split('/');
var domainParts = window.document.location.hostname.split('.');
var domainExt = 'com';
digitalData['domain'] = window.location.hostname;
var domainBase = domainParts[1];

var subdomain = domainParts[0] !== "www" ? true : false;
domainExt = domainParts.length > 3 ? domainParts[3] : domainParts[2];
var sc_geo = domainExt === 'com' ? 'us' : domainExt;
if(typeof digitalData['geo'] == 'undefined' ){
    digitalData['geo'] = sc_geo;
}
digitalData['server'] = domainParts.length > 3 ? domainParts[1] + '.' + domainParts[2] + '.' + domainParts[3] : domainParts[1] + '.' + domainParts[2];
digitalData['base_url'] = loc.replace('https://', '');
digitalData['base_url'] = digitalData['base_url'] .replace('http://', '');
digitalData['site'] = domainBase;


//check if page_name is set, if not set it.
digitalData['page_name'] = !digitalData['page_name'] ? setPageVal() : digitalData['page_name'];                 
digitalData['page_name_tier2'] = window.digitalData.page_name_tier2 ? window.digitalData.page_name_tier2 : setPageVal(2);
digitalData['page_name_tier3'] = window.digitalData.page_name_tier3 ? window.digitalData.page_name_tier3 : setPageVal(3);                      

if (digitalData['page_name'].indexOf("newspapers") == -1) 
{
   digitalData['page_name'] = 'newspapers : ' + digitalData['page_name'];
}

if(typeof digitalData.stack == "undefined")
{
	digitalData['stack'] = "newspapers"
}
//Bait
if (an_getCookie('BAIT')) {
    var baitPart = urldecode(an_getCookie('BAIT')).split(';');
    var baitArray = new Array();
    for (i = 0; i < baitPart.length; i++) {
        c = baitPart[i].split('=');
        baitArray[c[0]] = c[1];
    }

    digitalData['bait_language'] = baitArray['Language'];
    digitalData['bait_oldDna'] = baitArray['OldDna'];
    digitalData['bait_newDna'] = baitArray['NewDna'];
    digitalData['bait_hasTree'] = baitArray['ht'];
    digitalData['bait_treeNode'] = baitArray['tn'];
    digitalData['bait_dayCreate'] = baitArray['rt'];
    digitalData['bait_dayCancel'] = baitArray['ct'];
    digitalData['bait_cancelReason'] = baitArray['cr'];
    digitalData['bait_ownership'] = baitArray['ownership'];
    digitalData['bait_currentSub'] = baitArray['ownership'];
    digitalData['bait_subDur'] = baitArray['duration'];
    digitalData['bait_hasGS'] = baitArray['hasgs'];
    digitalData['bait_hadGS'] = baitArray['hadgs'];
    digitalData['bait_buyGS'] = baitArray['buygs'];
    digitalData['bait_cSub'] = baitArray['CSub'];
    digitalData['bait_eSub'] = baitArray['ESub'];
    digitalData['bait_cTrial'] = baitArray['CTrial'];
    digitalData['bait_eTrial'] = baitArray['ETrial'];
    digitalData['bait_bt'] = baitArray['BT'];
    digitalData['bait_lSub'] = baitArray['LSub'];
    digitalData['bait_lSubDuration'] = baitArray['LSubDuration'];
    digitalData['bait_loggedIn'] = baitArray['LoggedIn'];
    digitalData['bait_regType'] = baitArray['RegType'];
} else {
    digitalData['bait_language'] = null;
    digitalData['bait_oldDna'] = null;
    digitalData['bait_newDna'] = null;
    digitalData['bait_hasTree'] = null;
    digitalData['bait_treeNode'] = null;
    digitalData['bait_dayCreate'] = null;
    digitalData['bait_dayCancel'] = null;
    digitalData['bait_cancelReason'] = null;
    digitalData['bait_ownership'] = null;
    digitalData['bait_currentSub'] = null;
    digitalData['bait_subDur'] = null;
    digitalData['bait_hasGS'] = null;
    digitalData['bait_hadGS'] = null;
    digitalData['bait_buyGS'] = null;
    digitalData['bait_cSub'] = null;
    digitalData['bait_eSub'] = null;
    digitalData['bait_cTrial'] = null;
    digitalData['bait_eTrial'] = null;
    digitalData['bait_bt'] = null;
    digitalData['bait_lSub'] = null;
    digitalData['bait_lSubDuration'] = null;
    digitalData['bait_loggedIn'] = null;
    digitalData['bait_regType'] = null;
}


//Time Stamp
var tPL_date_d = new Date();
var tPL_date_offset = "-7";
var tPL_date_utc = tPL_date_d.getTime() + (tPL_date_d.getTimezoneOffset() * 60000);
var tPL_date = new Date(tPL_date_utc + (3600000 * tPL_date_offset));
var tPL_day = ('0' + tPL_date.getDate()).slice(-2);
var tPL_dayOfWeek = tPL_date_d.getDay();
var tPL_month = ('0' + (tPL_date.getMonth() + 1)).slice(-2);
var tPL_year = tPL_date.getFullYear();
var tPL_hour = ('0' + tPL_date.getHours()).slice(-2);
tPL_hour = parseInt(tPL_hour);
var tPL_minute = ('0' + tPL_date.getMinutes()).slice(-2);
var tPL_seconds = ('0' + tPL_date.getSeconds()).slice(-2);
var tPL_timezone = tPL_date.getTimezoneOffset();
var tPL_fulldate = tPL_month + '/' + tPL_day + '/' + tPL_year;
var tPL_fulltime = tPL_hour + ':' + tPL_minute + ':' + tPL_seconds;
var tPL_fulldatetime = tPL_month + '/' + tPL_day + '/' + tPL_year + ' ' + tPL_hour + ':' + tPL_minute + ':' + tPL_seconds;

digitalData['client_timestamp_simple'] = dateFormat(tPL_date_d);
digitalData['client_adjusted_timestamp'] = tPL_fulldatetime;


//Customer Segment
if (an_getCookie('OMNITURE')) {
    var customer_segment = an_getCookie('OMNITURE').substring(an_getCookie('OMNITURE').indexOf('=') + 1).toLowerCase();
    if (customer_segment.indexOf('&') > -1) {
        var customer_segment_array = customer_segment.split('&');
        digitalData['customer_segment'] = customer_segment_array[0];
    } else if (customer_segment.indexOf('%26') > -1) {
        var customer_segment_array = customer_segment.split('%26');
        digitalData['customer_segment'] = customer_segment_array[0];
    } else {
        digitalData['customer_segment'] = customer_segment;
    }
} else {
    digitalData['customer_segment'] = "nrvisitor";
}


//Win Back
if (digitalData['bait_cSub'] == 0 && digitalData['bait_eSub'] == 1) {
    digitalData['winback'] = "win back";
} else {
    digitalData['winback'] = "not win back";
}

//DNA User Type
if (digitalData['bait_newDna'] == 1) { digitalData['dna_user'] = 'dna user'; } else { digitalData['dna_user'] = 'non dna user'; }
//Health User Type
if (localStorage.getItem('customerObject') && localStorage.getItem('customerObject') !== "undefined"){
    if (localStorage.getItem("customerObject").indexOf("hau") > -1){
                digitalData["health_user"] = "health activated user";
    } else if (localStorage.getItem("customerObject").indexOf("hou") > -1){
                digitalData["health_user"] = "health user";
    }
}

//[Emerging] - Performance Timing

if (typeof window.performance.timing !== 'undefined') {
  // when (window.performance.timing.interactive > 0)
  function getTimePeriod(time, spread, typeStr, maxbuckets) {
    var maxTime = spread * (maxbuckets - 1),
        spreadSecondRatio = spread / 1000;
    if (time > maxTime) {
      return Math.ceil(maxTime / 1000).toFixed(2) + 's<' + typeStr;
    }
    if (time < spread) {
      return typeStr + '<' + spreadSecondRatio.toFixed(2) + 's';
    }
    var maxIncrement = Math.ceil(time / spread),
        maxSeconds = maxIncrement * spreadSecondRatio,
        minSeconds = maxSeconds - spreadSecondRatio;
    return minSeconds.toFixed(2) + 's<' + typeStr + '<' +
        maxSeconds.toFixed(2) + 's';
  }

  var t = window.performance.timing,
      start = t.redirectStart === 0 ? t.fetchStart : t.redirectStart,
      times = {
        redirect: t.redirectEnd - t.redirectStart,
        dns: t.domainLookupEnd - t.domainLookupStart,
        connect: t.connectEnd - t.connectStart,
        request: t.responseStart - t.requestStart,
        response: t.responseEnd - t.responseStart,
        interactive: t.domInteractive - t.responseStart,
      };
      
  //add as numeric events
  digitalData.redirect_load_time = Math.floor(((t.redirectEnd - t.redirectStart) % 60000) / 1000);
  digitalData.dns_load_time = Math.floor(((t.domainLookupEnd - t.domainLookupStart) % 60000) / 1000);
  digitalData.connect_load_time = Math.floor(((t.connectEnd - t.connectStart) % 60000) / 1000);
  digitalData.request_load_time = Math.floor(((t.responseStart - t.requestStart) % 60000) / 1000);
  digitalData.response_load_time = Math.floor(((t.responseEnd - t.responseStart) % 60000) / 1000);
  digitalData.interactive_load_time = Math.floor(((t.domInteractive - t.responseStart) % 60000) / 1000);
  
  // send in decided variable the following string
  digitalData.performance_timing_group = getTimePeriod(times.redirect, 100, 'redirect', 7) + ' : ' +
      getTimePeriod(times.dns, 100, 'dns', 7) + ' : ' +
      getTimePeriod(times.connect, 100, 'connect', 7) + ' : ' +
      getTimePeriod(times.request, 200, 'request', 7) + ' : ' +
      getTimePeriod(times.response, 200, 'response', 7);

  digitalData.performance_timing_interactive = getTimePeriod(times.interactive, 1000, 'interactive', 15);
}

//UCDMID
if (an_getCookie('LAU') || digitalData['customer_id'] || an_getCookie('BAIT')) {
    digitalData['ucdmid'] = an_getCookie('LAU')  || digitalData['customer_id'];
    if (digitalData['ucdmid'] == undefined) {
        var userArray = an_getCookie('BAIT') .split(";");
        var userArrayl = userArray.length;
        var userTarget = 0;
        for (var i = 0; i < userArrayl; i++) {
            if (userArray[i].indexOf("Id=") > -1) {
                userTarget = (userArray[i]);
            }
        }
        if (userTarget !== 0) {
            digitalData['ucdmid'] = userTarget.split("=")[1];
        }
    }
} else {
    digitalData['ucdmid'] = '00000000-0000-0000-0000-000000000000';
}


//[Emerging] set gpv_pn if cookie is set

digitalData['gpv_pn']=decodeURIComponent(an_getCookie('gpv_pn'))

//Convert digitalData object to lowerCase

digitalData = JSON.parse(JSON.stringify(digitalData, function(a, b) {
  return typeof b === "string" ? b.toLowerCase() : b
}));


//eVar and props mappings

s.pageName =digitalData['page_name']
s.prop50= digitalData['page_name']
s.eVar41= digitalData['page_name']

s.server = digitalData['server']

s.eVar12 = digitalData['stack']
s.channel = digitalData['stack']

s.prop42 = digitalData['page_name_tier2'];
s.eVar42 = digitalData['page_name_tier2'];

s.prop43 = digitalData['page_name_tier3'];
s.eVar43  = digitalData['page_name_tier3'];

s.prop73 = navigator.userAgent;

s.prop44 = digitalData['client_timestamp_simple']
s.eVar44 = digitalData['client_timestamp_simple']

s.prop45 = digitalData['base_url']
s.eVar45 = digitalData['base_url']

s.prop68 = digitalData['domain']

s.eVar13 = digitalData['geo']

s.eVar14 = digitalData['site']

s.prop41 = digitalData['gpv_pn']

s.prop49 = digitalData['client_adjusted_timestamp']
s.eVar49 = digitalData['client_adjusted_timestamp']

s.eVar23 = digitalData['customer_segment']
s.prop23 = digitalData['customer_segment']

s.prop24 = digitalData['winback']

s.eVar35 = digitalData['dna_user']
s.prop35 = digitalData['dna_user']

s.eVar98 = digitalData['performance_timing_interactive']

s.prop11 = digitalData['ucdmid']
s.eVar65 = digitalData['ucdmid']

//Track Page View

s.t();